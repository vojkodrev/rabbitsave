


docker container list -a

docker system prune

docker rmi contacts sortsave_app --force

docker images

docker ps

docker network create rabbits

docker run -d --network rabbits -e RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS="-setcookie SDKWEYQPZASDNAASDQWEQWE" --hostname rabbit-1 --name rabbit-1 rabbitmq
docker run -d --network rabbits -e RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS="-setcookie SDKWEYQPZASDNAASDQWEQWE" --hostname rabbit-2 --name rabbit-2 rabbitmq
docker run -d --network rabbits -e RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS="-setcookie SDKWEYQPZASDNAASDQWEQWE" --hostname rabbit-3 --name rabbit-3 rabbitmq

docker exec -it rabbit-1 /bin/bash

docker exec rabbit-1 rabbitmqctl cluster_status
docker exec rabbit-2 rabbitmqctl cluster_status
docker exec rabbit-3 rabbitmqctl cluster_status

docker exec rabbit-1 rabbitmqctl list_queues

docker exec rabbit-1 /bin/bash -c "cat \$(find / -iname .erlang.cookie)"

docker exec rabbit-1 echo ~/.erlang.cookie

docker exec rabbit-2 /bin/bash -c "rabbitmqctl stop_app && rabbitmqctl reset && rabbitmqctl join_cluster rabbit@rabbit-1 && rabbitmqctl start_app && rabbitmqctl cluster_status"
docker exec rabbit-3 /bin/bash -c "rabbitmqctl stop_app && rabbitmqctl reset && rabbitmqctl join_cluster rabbit@rabbit-1 && rabbitmqctl start_app && rabbitmqctl cluster_status"

docker exec rabbit-2 /bin/bash -c "echo -n SDKWEYQPZASDNAASDQWEQWE > ~/.erlang.cookie && rabbitmqctl stop_app && rabbitmqctl reset && rabbitmqctl join_cluster rabbit@rabbit-1 && rabbitmqctl start_app"
docker exec rabbit-3 /bin/bash -c "echo -n SDKWEYQPZASDNAASDQWEQWE > ~/.erlang.cookie && rabbitmqctl stop_app && rabbitmqctl reset && rabbitmqctl join_cluster rabbit@rabbit-1 && rabbitmqctl start_app"

docker logs rabbit-1

docker stop rabbit-1

docker rm --force rabbit-1 rabbit-2 rabbit-3 rabbit-4 rabbit-5


docker kill $(docker ps -q); docker rm $(docker ps -a -q)
docker rmi $(docker images -q)

docker system prune --volumes
docker system prune

docker compose up --build

ip a
ss -lntu

chown -R vojko:vojko ..

iptables -N TCP
iptables -A TCP -p tcp --dport 50001 -j ACCEPT
iptables -A TCP -p tcp --dport 50002 -j ACCEPT
iptables -A TCP -p tcp --dport 50003 -j ACCEPT

du -a / | sort -n -r | head -n 10



docker exec mongo-config-1 mongo --host localhost --port 27019 /usr/local/mongo-config-init/init.js

docker exec mongo-shard-1-1 mongo --host localhost --port 27018 /usr/local/mongo-shard-init/init.js
docker exec mongo-shard-2-1 mongo --host localhost --port 27018 /usr/local/mongo-shard-init/init.js

docker exec mongos-1 mongo rabbitsave --host localhost --port 27017 /usr/local/mongos-init/init.js

docker exec -it mongo-shard-1-1 mongo --host localhost --port 27018
docker exec -it mongo-config-1 mongo --host localhost --port 27019
rs.status()

docker exec -it mongos-1 mongo rabbitsave --host localhost --port 27017
docker exec -it mongos-2 mongo rabbitsave --host localhost --port 27017
sh.status()
db.entries.getShardDistribution()

db.entries.find().limit(5)
db.entries.deleteMany({})
db.entries.find({matchId: 14181893}).sort({savedAtMs: 1, savedAtNs: 1}).limit(5)
